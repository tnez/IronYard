* IronYard

This is my root directory for my time at IronYard.


** D01

   We discussed some stuff


** DAY 02

*** DONE Quiz
    Quiz a user on trivia relating to numbers pulled from the [[http://numbersapi.com/][Numbers
    API]].
*** DONE BMI_CALC
    Calculates BMI based on user input according to the formula found
    [[http://en.wikipedia.org/wiki/Body_mass_index][here]].


** Day 3 - January 7th 2015

   Choose one! 

*** DONE Assignment 1:

    Create a number guessing game. Game should pick a random number
    between 1 and 100 and ask you for a guess. If the guess is less
    than the number, inform the user and let them guess again. If the
    guess is greater than the number, inform the user and let them
    guess again. If the guess is correct, inform the user and quit.

    Bonus: write the opposite program: you, the user, pick a number
    between 1 and 100. The computer has to guess the number. You tell
    it whether it's too high, too low, or right on after each
    guess. The computer gets five guesses.

*** TODO Assignment 2:

    Create Blackjack. Use numbers 1-11 for cards instead of creating
    an entire deck! I want to be able to split on double cards and
    play both hands.

    Bonus: create a dealer for the blackjack game. He doesn't have to
    split.

    | Components | Desc                     |
    |------------+--------------------------|
    | deck       | - standard deck of cards |
    |            | - next card              |
    |------------+--------------------------|
    | player     | - bankroll               |
    |            | - bet                    |
    |            | - cards                  |
    |            | - hit / stay             |
    |            | - split                  |
    |------------+--------------------------|
    | dealer     | - is_busted?             |
    |------------+--------------------------|
    |            |                          |

*** TODO Assignment 3:

    Finish tic tac toe. Check for wins. Tell the user to move again if
    they choose a spot that is already taken.

*** TODO Extra bonus.

    Do all of the above - Will buy someone a beer on Friday if they do
    all of the above.


** TODO Day 4 - Jan 8th 2015

   Horse racing game. (More complicated because they have Friday and
   the whole weekend)

*** Rules:

   - Must use at least two classes Must have at least 4 horses (All
     horses can NOT be different classes!
   - User input must affect at least one horse's speed Must out put
     the horses' paths (even as simple as "---'horse 1'") as race
     progresses

*** Goals:

    - classes
    - methods
    - passing arguments to methods
    - thinking about the design and how classes interface with each
      other
    - DRYness
    - making a complete & interesting & good program

** TODO Day 6 - January 12th 2015

   Using your HTML and CSS knowledge, create a website about anything
   you would like.

   Minimum of 3 pages (index, 2 others) Research, learn and document
   how to use 5 CSS tags and/or special properties Be ready to talk
   about them tomorrow during class!

*** Define a font

    Define a font-family such that we select the font in order of
    preference, left-to-right, such that the first font will be used
    if it is available, otherwise it will continue down the list
    until an available font is found.

    #+BEGIN_SRC css :export code
      body {
	  font-family: "Helvetica Neue", Helvetica, sans-serif;
      }
    #+END_SRC

*** Center a wrapper
    
    #+BEGIN_SRC css :exports code
      div.wrapper {
	  max-width: 650px;
	  margin: 0 auto;
      }

    #+END_SRC

*** Create a circular border to an image using CSS

    #+BEGIN_SRC css :exports code
      header img {
	  width: 200px;
	  height: 200px;
	  border-radius: 100px;
      }

    #+END_SRC

*** Change appearence of a link when the pointer hovers over
    
    #+BEGIN_SRC css :exports code
      .navigation a:hover {
	  color: #4183C4;
	  font-weight: bold;
      }

    #+END_SRC

*** Make a list display horizontally
    
    #+BEGIN_SRC css :exports code
      .navigation li {
	  display: inline-block;
	  margin-right: 7px;
      }

    #+END_SRC  

*** Increase the line height and letter spacing

    #+BEGIN_SRC css :exports code
      .main-content {
	  line-height: 1.4em;
	  letter-spacing: 0.05em;
      }

    #+END_SRC

** Day 9 - January 15th 2014

   Create a blog website no css required need each CRUD after edit,
   repopulate all the fields and then redirect front page- list of
   posts text area - research this and use it for content each post
   has a:
   
   - title
   - content

   Research twitter bootstrap if you would like!
   http://getbootstrap.com/

   [[./D09/screenshot.png]]
   [[./D09]]

** Day 11 - January 20th 2015

*** Specifications

   - Create a rails application that has basic CRUD.
   - Any type of application is fine.
   - 1 model
   - 1 controller required
   - Strongly suggest doing more than 1!

*** Description

    I decdied to create a rails application to handle code snippets
    The apps hold snippets of code, associated with given user
    accounts.

** Day 12 - January 21st 2015 - (Hospital v1)

   We are creating a tracking system for a patient as he/she goes
   through a hospital. Today you will create the basic CRUD.

   - First name (Text field)
   - Last name (Text field)
   - Date of Birth (date selector field - Only dates 10 years or
     earlier)
   - Description (text field - Will be a description of why the
     patient is at the hospital)
   - Gender (Radio button)
   - Blood Type (Select box)
   - All of these fields are required!

   See results here: [[https://github.com/tnez/hospital/tree/v1.0]]

** Day 13 - January 22nd 2015 - (Hospital v2)

Change your relationships up a bit. You need to add
Hospitals/Facilities and Medications. Your patients should live under
your facilities and your medications should live under your
patients. You should be able to create multiple facilities and have
many patients there. Your medications should also be related to your
patients. You should be able to have many medications.

*** Research

Join tables
Has Many Through relationships

** Programmer Problems
   1) sort: [[./ProgProblems/01-Sort.org]]
   2) FizzBuzz [[./ProgProblems/02-FizzBuzz.org]]
   3) LadderClimber [[./ProgProblems/03-LadderClimber.org]]
